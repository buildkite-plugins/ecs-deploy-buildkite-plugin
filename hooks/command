#!/bin/bash
set -euo pipefail

function error_handler() {
  echo "$1"
  exit "$2"
}

function auth_ecr() {
  local docker_login
  docker_login=$(aws ecr get-login --no-include-email)
  if ! eval "${docker_login}"; then
    error_handler "Unable to log in to ECR" 2
  fi
}

function deploy_service() {
  if ! docker run --rm --tty -v "$(pwd)":/app -w /app 909551307430.dkr.ecr.us-east-1.amazonaws.com/ecs-toolkit:latest deploy -c "${1}" --ci ; then
    error_handler "ecs-deploy Buildkite plugin failed: deploy" 3
  fi
} 

function validate_service() {
  if ! docker run --rm --tty -v "$(pwd)":/app -w /app 909551307430.dkr.ecr.us-east-1.amazonaws.com/ecs-toolkit:latest validate -c "${1}" ; then
    error_handler "ecs-deploy Buildkite plugin failed: validate" 3
  fi
}

deploy_config=${BUILDKITE_PLUGIN_ECS_DEPLOY_DEPLOY:-""}
validate_config=${BUILDKITE_PLUGIN_ECS_DEPLOY_VALIDATE:-""}

# If both or neither 'deploy' or 'validate' options are given, exit with an error
if [[ -z "${deploy_config}" && -z "${validate_config}" ]] || [[ -n "${deploy_config}" && -n "${validate_config}" ]]; then
  error_handler "One of either validate or deploy must be specified. See (TBA) for examples" 1
fi

auth_ecr

if [[ -n "${deploy_config}" ]]; then
  deploy_service "${deploy_config}"
elif [[ -n "${validate_config}" ]]; then
  validate_service "${validate_config}"
else
  # This should never be reached
  exit 1
fi
